import React, { useState } from "react";
import axios from "axios";
import { imageDb } from "../../utls/config";
import { ref, uploadBytes, getDownloadURL } from "firebase/storage";
import { v4 } from "uuid";
import { BASE_URL } from "../../utls/constants";

const ProfileInformation = ({ userData }) => {
  const [image, setImage] = useState(null);

  const getCookie = (name) => {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) {
      return parts.pop().split(";").shift();
    }
  };

  const handleImageChange = (e) => {
    if (e.target.files[0]) {
      setImage(e.target.files[0]);
    }
  };

  const handleImageUpload = async () => {
    try {
      if (image) {
        const imgRef = ref(imageDb, `users/${v4()}`);
        await uploadBytes(imgRef, image);
        const imageUrl = await getDownloadURL(imgRef);

        const token = getCookie("token") || localStorage.getItem("token");
        await axios.put(
          `${BASE_URL}/user/image`,
          { imageUrl },
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );
        window.location.reload();
      }
    } catch (error) {
      console.error("Error updating profile image:", error);
    }
  };

  return (
    <div className="flex items-start justify-between">
      <div>
        <div className="flex items-center mb-1">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="h-8 w-8 mr-2 text-gray-400"
            viewBox="0 0 32 32"
            fill="none"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            <path
              d="m26.5033 6.99993c-.2762.00181-.5015-.22058-.5033-.49672-.0064-.98428-.2401-1.99507-.8441-2.80875-.5951-.80165-1.589-1.4656-3.2266-1.69954-.2734-.03906-.4633-.29232-.4243-.56569.0391-.27337.2923-.463316.5657-.42426 1.8624.26605 3.1116 1.04744 3.8881 2.09345.7676 1.03399 1.0338 2.2732 1.0412 3.39825.0018.27614-.2206.50146-.4967.50326zm-3.0033.50328c.0018.27614.2271.49853.5033.49672.2761-.0018.4985-.22712.4967-.50326-.0071-1.09119-.2724-2.33862-1.05-3.32402-.7941-1.00636-2.0701-1.67271-3.95-1.67271-.2761 0-.5.22386-.5.5s.2239.5.5.5c1.6201 0 2.5874.56024 3.165 1.29217.5941.75289.8288 1.75546.835 2.7111zm-19 9.49669c.27614 0 .5.2239.5.5 0 1.0229.00728 1.9144.33457 2.6781.3082.7191.93138 1.3835 2.32354 1.8476.26198.0873.40356.3705.31623.6325-.08732.2619-.37048.4035-.63245.3162-1.60785-.536-2.48466-1.3715-2.92646-2.4024-.41569-.9699-.41555-2.0581-.41543-3.0232v-.0488c0-.2761.22386-.5.5-.5zm-2.02002 2.0313c.27614 0 .5.2238.5.5 0 1.924 1.44142 4.5 4.47314 4.5.27615 0 .5.2238.5.5 0 .2761-.22385.5-.5.5-3.74952 0-5.47314-3.2052-5.47314-5.5 0-.2762.22386-.5.5-.5zm19.00882-12.22551c-.4441-.9792-1.2576-1.44872-2.0458-1.59175-.7427-.13478-1.492.00825-2.0158.25919v.00001c-.4681.22429-.9846.71538-1.3026 1.40204-.0823-.04099-.1664-.07846-.2518-.11213-.7152-.28209-1.611-.33715-2.5113.07926l-.0114.00525-.0112.00553c-.447.22049-1.0117.66867-1.3686 1.35229-.3791.72631-.4881 1.65562-.0704 2.69782.062.1548.122.3033.1799.4455-.4007.032-.8332.1456-1.2906.373-1.09069.5422-2.13736 2.2395-1.05931 4.4038l.01779.0357.02057.0342c.05588.0928.12268.203.1954.322-.45849.1935-.87833.4844-1.20374.8452-.41702.4623-.71763 1.0777-.73795 1.8063-.02027.7271.2411 1.4618.75804 2.1654.34226.4657.87624 1.0699 1.3804 1.5998.4814.5059.9954 1.0071 1.3406 1.2819l4.5668 4.1708.0126.0115.013.011c.5263.4488 1.443 1.0848 2.5567 1.6125 1.1098.5258 2.4863.9781 3.9124.9781 1.7695 0 3.8555-.6981 5.5095-2.0841 1.6801-1.4079 2.928-3.5403 2.928-6.3612v-.0206l-.0009-.0206c-.0499-1.2093-.3103-2.367-.5531-3.4461-.0454-.2019-.0902-.4011-.1329-.5973-.278-1.278-.4922-2.52-.3863-3.918.1327-1.7511.1575-2.0248.2067-2.5664.0101-.1108.0212-.2329.0344-.3811.0469-.5248-.1272-1.244-.5045-1.86874-.4008-.66374-1.0928-1.32149-2.1546-1.54289v-.00003l-.008-.0016c-.5119-.10239-1.3066-.086-2.0454.3033-.8032.42322-1.4309 1.23187-1.5811 2.47976-.0292.2427-.0548.4699-.0776.6822-.1202-.2277-.2431-.4666-.3682-.7153-.6533-1.29907-1.3205-2.77015-1.9289-4.11179l-.0001-.00004zm-5.0523 3.99681c.1659.365.3222.7093.4329.9549.0719.1743.1342.3165.1779.4014l.01.0192v.0001l.0016.003.0078.0144c.522 1.1454 1.112 2.2961 1.5712 3.077.28.4761.8928.6351 1.3689.3551.4761-.2799.6351-.8928.3551-1.3689-.4601-.7826-1.048-1.9427-1.547-3.0508-.0202-.0456-.0458-.1027-.0754-.1687l-.0403-.0908-.0266-.0656c-.0842-.209-.1872-.4744-.2932-.7563-.2115-.56245-.4185-1.14802-.5134-1.47407-.0983-.42579-.0216-.75021.0949-.98083.0617-.12222.1363-.22056.2063-.29214.073-.07473.1228-.10189.1242-.10267v-.00001c.1716-.08218.495-.14933.7945-.09498.254.04609.4522.16501.5815.44993l.0191.04214c.6027 1.32913 1.2837 2.83063 1.9553 4.16603.6655 1.3232 1.3694 2.5821 2.0208 3.3421.2246.262.5684.3897.9096.3378s.6316-.276.7681-.593c.1812-.4206.2377-.9187.2877-1.4276.0145-.1471.0289-.3042.0445-.4747v-.0005c.0436-.4762.0967-1.0563.1875-1.8109.0757-.6287.3346-.8474.5278-.9492.2555-.1346.5639-.1418.7173-.1122.4044.0857.6692.3247.8463.618.0912.151.1529.3082.1886.4445.032.1223.0349.1952.0355.2105.0001.0032.0002.0039.0003.0019-.0132.1481-.0243.2704-.0344.3817v.0001.0001.0002c-.0498.5482-.0753.8288-.2089 2.5923-.1284 1.6957.1379 3.1686.4263 4.4941.0486.2235.0972.4407.1448.6531.2399 1.0718.4525 2.0213.4964 3.027-.0059 2.1608-.9436 3.7443-2.2126 4.8077-1.2991 1.0886-2.9319 1.617-4.2249 1.617-1.0239 0-2.0979-.3315-3.056-.7855-.9443-.4474-1.7066-.9807-2.1031-1.3165l-4.5806-4.1832-.0292-.0267-.0312-.0243c-.2177-.1693-.6621-.5922-1.153-1.1083-.4841-.5087-.9501-1.0413-1.2177-1.4054-.3143-.4277-.3758-.7362-.3705-.9253.0052-.1876.0785-.3615.2238-.5226.2722-.3017.6758-.4401.9594-.4491.2287.253.4642.4954.6975.7264.4059.4017.8267.7893 1.2181 1.1498l.0356.0328c.4077.3755.7782.7177 1.0977 1.0409.3882.3928 1.0214.3965 1.4142.0083.3928-.3883.3964-1.0214.0082-1.4142-.3583-.3625-.7643-.737-1.1651-1.1061l-.0255-.0235h-.0001c-.3986-.3671-.7962-.7334-1.176-1.1094-.4057-.4015-.768-.7925-1.0681-1.1744-.051-.0777-.1079-.1663-.1687-.2622-.176-.2774-.3711-.595-.5184-.8383-.1814-.4216-.2406-.9168-.2046-1.3493.0975-.2548.2668-.3896.3304-.4212.4443-.221.7662-.1878.9881-.1117.2581.0886.4347.2572.489.3288l.0156-.0105c.0393.0673.0787.1343.1181.2007.7515 1.267 1.5668 2.4589 2.1136 3.2067.3259.4458.9516.5429 1.3974.217.4458-.326.543-.9517.217-1.3975-.5157-.7053-1.2943-1.8436-2.0078-3.0465-.1271-.2141-.2504-.4277-.3688-.639-.0433-.0946-.0932-.2057-.1495-.3339-.1831-.417-.4295-1.003-.736-1.7675-.201-.50157-.1212-.82095-.013-1.02837.1273-.24382.3407-.41205.4704-.47906.3448-.15534.6632-.13158.9253-.02821.137.05405.2528.1283.3388.20405.0424.03739.0739.07195.0958.10014.0107.0139.0184.02529.0236.03372l.0041.00701.0015.00268.0013.00258c.0003.00059.0004.00088.0004.00087.0507.11203.1787.39312.3382.74333l.0001.00002c.1495.32824.3266.71714.4937 1.08454z"
              fill="#212121"
            ></path>
          </svg>
          <h2 className="text-2xl font-bold">Hello, {userData.username}</h2>
        </div>
        <div className="flex items-center space-x-2 mb-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="h-5 w-5 text-gray-400"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
            />
          </svg>
          <span className="text-gray-600">{userData.email}</span>
        </div>
        <div className="flex items-center space-x-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="h-5 w-5 text-gray-400"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
            />
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"
            />
          </svg>
          <span className="text-gray-600">{userData.location.title}</span>
        </div>
      </div>
      <div>
        <label htmlFor="image-upload">
          <img
            src={userData.image}
            alt="Profile"
            className="w-32 h-32 rounded-full cursor-pointer"
          />
        </label>
        <input
          id="image-upload"
          type="file"
          accept="image/*"
          onChange={handleImageChange}
          className="hidden"
        />
        {image && (
          <button
            onClick={handleImageUpload}
            className="mt-2 bg-blue-500 text-white px-4 py-2 rounded"
          >
            Update Image
          </button>
        )}
      </div>
    </div>
  );
};

export default ProfileInformation;
